package Six;

/**
 * 封装：
 * 概念：
 * 将类的某些信息隐藏在内部，不允许外部程序直接访问；
 * 而是通过该类提供的方法来实现对隐藏信息的操作和访问
 *
 * 封装解决什么问题
 *     如果任何一个处理类都可以给dog进行赋值操作，那么当值不准确的时候，可以产生额外结果
 *        如果赋值的时候同时添加一些逻辑判断呢？
 *        封装可以解决此问题
 *    使用封装保证数据的规范，不符合规范的数据将无法进行操作
 *    好处：
 *       1、隐藏类的内部实现细节
 *       2、只能通过提供的方法执行访问，其他方法不能访问
 *       3、可以根据需求添加复杂的逻辑判断语句
 *       4、方便修改实现
 *
 *       面向对象的封装可以用一句话来概述：为了保证数据的安全操作
 *           将类中的属性设置为私有属性，提供共有的外部方法共程序进行调用，可以实现丰富的细节操作
 *       广义的封装：
 *            可以将完成特定功能的代码块封装成一个方法，共不同的程序进行调用
 *
 * */



public class DogTest {
    public static void main(String[] args) {
        Dog dog=new Dog();
        dog.name="大黄";
        //dog.age=20;//在加入private  改age就不能访问了
        dog.setAge(-20);
        dog.color="yellow";
        dog.show();




    }
}
